subcmd_timeout: 1             # how long between when a subcommand is triggered and when it times out if a follow up keystroke isn't pressed
default_mode: normal
modes:                        # the list of modes
  normal:                       # home mode - all the commands available to you in the starting mode
    "1": ms_normal                # mode switch to buffer
    "2": ms_insert                # mode switch to insert
    "3": ms_select                # mode switch text selection
    "4": ms_pan                   # mode switch to panning
    "9": ms_buffer_adj            # mode switch to buffer adjustment
    "0": ms_buffer_nav            # mode switch to buffer navigation

    "{": jump_left                # jump to the left of the buffer
    "[": jump_beg_of_line         # jump to the first non-whitespace character in the line
    "]": jump_end_of_line         # jump to the last non-whitespace character in the line
    "}": jump_right               # jump to the right of the buffer

    "<": outdent                  # remove up to two spaces at the beginning of the line, if available
    ">": indent                   # add two spaces at the beginning of the line

    "+": jump_to_eof              # jump to the end of the file
    "_": jump_to_bof              # jump to the beginning of the file

    "#": toggle_line_numbers      # toggle line numbers
    "/": ms_search                # mode switch to search
    "?": help                     # open help - show keyboard shortcuts by default
    "`": exit                     # exit/quit

    C: clear_to_eol               # clear from the cursor to the end of the line
    co: clipboard_open            # show the clipboard preview window for the current buffer
    cw: change_word               # clear from the cursor to the end of the word
    d: delete_current_line        # delete the entire current line, and move everything else up
    f: find_next                  # find the next instance of the search string
    F: find_prev                  # find the previous instance of the search string
    h: caret_left!                # move the cursor to the left
    j: caret_down!                # move the cursor down
    k: caret_up!                  # move the cursor up
    l: caret_right!               # move the cursor right
    H: caret_left_fast!           # move the cursor to the left 5x
    J: caret_down_fast!           # move the cursor down 5x
    K: caret_up_fast!             # move the cursor up 5x
    L: caret_right_fast!          # move the cursor right 5x
    n: notes_toggle               # toggle the display of notes for the current file; notes are like comments, but they're stored alongside the file, and not in it
    N: note_add                   # add a new note to the current file
    m*: mark_set                  # set the mark by letter
    "' ": mark_toggle             # toggle to the most recently selected mark
    "'*": mark_goto               # goto the lettered mark
    o: insert_newline_below       # insert a new, empty line below the caret's current line
    O: insert_newline_above       # insert a new, empty line above the caret's current line
    P: paste                      # paste whatever is in the most recent clipboard
    p*: paste_from                # paste from a particular clipboard
    ".": redo                     # redo the last edit action
    ",": undo                     # undo the previous edit
    RC: reload_config             # reload and re-parse the config file
    S: file_system                # open a buffer with the file system navigator
    t: open_transform_editor      # open the transform editor (the data pipelines that get applied to visible lines)
    T: tail_file                  # scroll to the bottom of the file and stream its output into the buffer
    v: version_start              # undo/redo version tree? not sure what this is
    x: delete_at_caret            # delete the character at the caret position
  pan:                          # buffer panning mode
    h: rect_left!                 # pan left
    j: rect_down!                 # pan down
    k: rect_up!                   # pan up
    l: rect_right!                # pan right
    H: rect_left_fast!            # pan left faster
    J: rect_down_fast!            # pan down faster
    K: rect_up_fast!              # pan up faster
    L: rect_right_fast!           # pan right faster
  select:                       # text selection mode
    h: sel_more_left              # select more to the left
    j: sel_more_down              # select more one line down
    k: sel_more_up                # select more one line up
    l: sel_more_right             # select more to the right
    H: sel_less_left              # select less from the right edge moving left
    J: sel_less_down              # select less from the top edge moving down
    K: sel_less_up                # select less from the bottom edge, moving up
    L: sel_less_right             # select less from the left edge, moving right
    C: copy                       # copy the selected text
    c*: copy_to                   # copy the selected text to the lettered clipboard
    u: upcase                     # convert the selected text to all upper case
    d: downcase                   # convert the selected text to all lower case
  history:                      # history mode - history of what, exactly, I'm not sure
    p: history_preview            # show histories
    j: version_jump_to            # jump to a specific history
  buffer_adj:                     # buffer size adjustment mode - buffers have joints between them where they meet, and the joints are ordered.
    n: adj_next_joint             # go to the next buffer joint
    p: adj_prev_joint             # go to the previous buffer joint
    h: adj_joint_left             # go to the closest buffer joint to the left
    j: adj_joint_down             # go to the closest buffer joint downwards
    k: adj_joint_up               # go to the closest buffer upwards
    l: adj_joint_right            # go to the closest buffer joint to the right
    v: adj_make_vert_split        # create a vertical_split
    h: adj_make_hori_split        # create a horizontal split
  buffer_nav:                   # buffer navigation mode
    h: nav_jump_left              # move to the buffer to the left
    j: nav_jump_down              # move to the buffer that's downwards
    k: nav_jump_up                # move to the buffer that's upwards
    l: nav_jump_right             # move to the buffer to the right
